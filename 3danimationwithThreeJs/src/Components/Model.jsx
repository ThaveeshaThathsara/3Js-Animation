/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 model.gltf 
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame, useThree } from '@react-three/fiber';

export function Model(props) {
  const { nodes, materials } = useGLTF('/model.gltf');
  const ref = useRef();
  const {viewport,camera}=useThree();
  const {width, height} = viewport.getCurrentViewport(camera,[0,0,props.position[2]]);


  useFrame(() => {

    ref.current.position.y +=0.01; 
    ref.current.rotation.x +=0.01; 
    ref.current.rotation.y +=0.01; 

    if(ref.current.position.y>height/1.3){
      ref.current.position.y=-height/1.3;
    }

  });


  return (
    <group {...props} dispose={null} ref={ref}>
      <mesh geometry={nodes.Cube.geometry} material={materials['Material.013']}>

        <meshStandardMaterial

          {...materials['Material.013']}
          color={props.color}
          envMapIntensity={2}
          roughness={0.1}
        
        />


        <mesh geometry={nodes.BezierCircle.geometry} material={materials['Material.016']} />
        <mesh geometry={nodes.Cube001.geometry} material={materials['Material.017']} />
        <mesh geometry={nodes.Cube002.geometry} material={materials['Material.015']} />
        <mesh geometry={nodes.NurbsPath.geometry} material={materials['Material.015']} />
      </mesh>
    </group>
  )
}

useGLTF.preload('/model.gltf')
